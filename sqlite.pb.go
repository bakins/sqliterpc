// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        (unknown)
// source: sqlite.proto

package sqliterpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// `TypeCode` indicates the type of a sqlite value.
type TypeCode int32

const (
	TypeCode_TYPE_CODE_UNSPECIFIED TypeCode = 0
	TypeCode_TYPE_CODE_INTEGER     TypeCode = 1
	TypeCode_TYPE_CODE_TEXT        TypeCode = 2
	TypeCode_TYPE_CODE_BLOB        TypeCode = 3
	TypeCode_TYPE_CODE_REAL        TypeCode = 4
	TypeCode_TYPE_CODE_NUMERIC     TypeCode = 5
	TypeCode_TYPE_CODE_BOOL        TypeCode = 6
	TypeCode_TYPE_CODE_TIME        TypeCode = 7
	TypeCode_TYPE_CODE_NULL        TypeCode = 8
)

// Enum value maps for TypeCode.
var (
	TypeCode_name = map[int32]string{
		0: "TYPE_CODE_UNSPECIFIED",
		1: "TYPE_CODE_INTEGER",
		2: "TYPE_CODE_TEXT",
		3: "TYPE_CODE_BLOB",
		4: "TYPE_CODE_REAL",
		5: "TYPE_CODE_NUMERIC",
		6: "TYPE_CODE_BOOL",
		7: "TYPE_CODE_TIME",
		8: "TYPE_CODE_NULL",
	}
	TypeCode_value = map[string]int32{
		"TYPE_CODE_UNSPECIFIED": 0,
		"TYPE_CODE_INTEGER":     1,
		"TYPE_CODE_TEXT":        2,
		"TYPE_CODE_BLOB":        3,
		"TYPE_CODE_REAL":        4,
		"TYPE_CODE_NUMERIC":     5,
		"TYPE_CODE_BOOL":        6,
		"TYPE_CODE_TIME":        7,
		"TYPE_CODE_NULL":        8,
	}
)

func (x TypeCode) Enum() *TypeCode {
	p := new(TypeCode)
	*p = x
	return p
}

func (x TypeCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TypeCode) Descriptor() protoreflect.EnumDescriptor {
	return file_sqlite_proto_enumTypes[0].Descriptor()
}

func (TypeCode) Type() protoreflect.EnumType {
	return &file_sqlite_proto_enumTypes[0]
}

func (x TypeCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TypeCode.Descriptor instead.
func (TypeCode) EnumDescriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{0}
}

// `Type` indicates the type of a sqlite value.
type Type struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// code is the sqlite type
	Code TypeCode `protobuf:"varint,1,opt,name=code,proto3,enum=sqlite.rpc.v0.TypeCode" json:"code,omitempty"`
}

func (x *Type) Reset() {
	*x = Type{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Type) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Type) ProtoMessage() {}

func (x *Type) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Type.ProtoReflect.Descriptor instead.
func (*Type) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{0}
}

func (x *Type) GetCode() TypeCode {
	if x != nil {
		return x.Code
	}
	return TypeCode_TYPE_CODE_UNSPECIFIED
}

// `Value` indicates the value of a parameter or returned column.
type Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Kind:
	//	*Value_IntegerValue
	//	*Value_TextValue
	//	*Value_BlobValue
	//	*Value_RealValue
	//	*Value_NumericValue
	//	*Value_BoolValue
	//	*Value_TimeValue
	//	*Value_NullValue
	Kind isValue_Kind `protobuf_oneof:"kind"`
}

func (x *Value) Reset() {
	*x = Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Value) ProtoMessage() {}

func (x *Value) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Value.ProtoReflect.Descriptor instead.
func (*Value) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{1}
}

func (m *Value) GetKind() isValue_Kind {
	if m != nil {
		return m.Kind
	}
	return nil
}

func (x *Value) GetIntegerValue() *IntergerValue {
	if x, ok := x.GetKind().(*Value_IntegerValue); ok {
		return x.IntegerValue
	}
	return nil
}

func (x *Value) GetTextValue() *TextValue {
	if x, ok := x.GetKind().(*Value_TextValue); ok {
		return x.TextValue
	}
	return nil
}

func (x *Value) GetBlobValue() *BlobValue {
	if x, ok := x.GetKind().(*Value_BlobValue); ok {
		return x.BlobValue
	}
	return nil
}

func (x *Value) GetRealValue() *RealValue {
	if x, ok := x.GetKind().(*Value_RealValue); ok {
		return x.RealValue
	}
	return nil
}

func (x *Value) GetNumericValue() *NumericValue {
	if x, ok := x.GetKind().(*Value_NumericValue); ok {
		return x.NumericValue
	}
	return nil
}

func (x *Value) GetBoolValue() *BoolValue {
	if x, ok := x.GetKind().(*Value_BoolValue); ok {
		return x.BoolValue
	}
	return nil
}

func (x *Value) GetTimeValue() *TimeValue {
	if x, ok := x.GetKind().(*Value_TimeValue); ok {
		return x.TimeValue
	}
	return nil
}

func (x *Value) GetNullValue() *NullValue {
	if x, ok := x.GetKind().(*Value_NullValue); ok {
		return x.NullValue
	}
	return nil
}

type isValue_Kind interface {
	isValue_Kind()
}

type Value_IntegerValue struct {
	IntegerValue *IntergerValue `protobuf:"bytes,1,opt,name=integer_value,json=integerValue,proto3,oneof"`
}

type Value_TextValue struct {
	TextValue *TextValue `protobuf:"bytes,2,opt,name=text_value,json=textValue,proto3,oneof"`
}

type Value_BlobValue struct {
	BlobValue *BlobValue `protobuf:"bytes,3,opt,name=blob_value,json=blobValue,proto3,oneof"`
}

type Value_RealValue struct {
	RealValue *RealValue `protobuf:"bytes,4,opt,name=real_value,json=realValue,proto3,oneof"`
}

type Value_NumericValue struct {
	NumericValue *NumericValue `protobuf:"bytes,5,opt,name=numeric_value,json=numericValue,proto3,oneof"`
}

type Value_BoolValue struct {
	BoolValue *BoolValue `protobuf:"bytes,6,opt,name=bool_value,json=boolValue,proto3,oneof"`
}

type Value_TimeValue struct {
	TimeValue *TimeValue `protobuf:"bytes,7,opt,name=time_value,json=timeValue,proto3,oneof"`
}

type Value_NullValue struct {
	NullValue *NullValue `protobuf:"bytes,8,opt,name=null_value,json=nullValue,proto3,oneof"`
}

func (*Value_IntegerValue) isValue_Kind() {}

func (*Value_TextValue) isValue_Kind() {}

func (*Value_BlobValue) isValue_Kind() {}

func (*Value_RealValue) isValue_Kind() {}

func (*Value_NumericValue) isValue_Kind() {}

func (*Value_BoolValue) isValue_Kind() {}

func (*Value_TimeValue) isValue_Kind() {}

func (*Value_NullValue) isValue_Kind() {}

type IntergerValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Valid bool  `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *IntergerValue) Reset() {
	*x = IntergerValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IntergerValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntergerValue) ProtoMessage() {}

func (x *IntergerValue) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntergerValue.ProtoReflect.Descriptor instead.
func (*IntergerValue) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{2}
}

func (x *IntergerValue) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *IntergerValue) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type TextValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Valid bool   `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *TextValue) Reset() {
	*x = TextValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextValue) ProtoMessage() {}

func (x *TextValue) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextValue.ProtoReflect.Descriptor instead.
func (*TextValue) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{3}
}

func (x *TextValue) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *TextValue) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type BlobValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value []byte `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Valid bool   `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *BlobValue) Reset() {
	*x = BlobValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlobValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlobValue) ProtoMessage() {}

func (x *BlobValue) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlobValue.ProtoReflect.Descriptor instead.
func (*BlobValue) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{4}
}

func (x *BlobValue) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *BlobValue) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type RealValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Valid bool    `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *RealValue) Reset() {
	*x = RealValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RealValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RealValue) ProtoMessage() {}

func (x *RealValue) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RealValue.ProtoReflect.Descriptor instead.
func (*RealValue) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{5}
}

func (x *RealValue) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *RealValue) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type NumericValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
	Valid bool    `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *NumericValue) Reset() {
	*x = NumericValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NumericValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NumericValue) ProtoMessage() {}

func (x *NumericValue) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NumericValue.ProtoReflect.Descriptor instead.
func (*NumericValue) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{6}
}

func (x *NumericValue) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *NumericValue) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type BoolValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Valid bool `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *BoolValue) Reset() {
	*x = BoolValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BoolValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BoolValue) ProtoMessage() {}

func (x *BoolValue) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BoolValue.ProtoReflect.Descriptor instead.
func (*BoolValue) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{7}
}

func (x *BoolValue) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *BoolValue) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type TimeValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Valid bool                   `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *TimeValue) Reset() {
	*x = TimeValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimeValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimeValue) ProtoMessage() {}

func (x *TimeValue) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimeValue.ProtoReflect.Descriptor instead.
func (*TimeValue) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{8}
}

func (x *TimeValue) GetValue() *timestamppb.Timestamp {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *TimeValue) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type NullValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// value and valid are ignored - they are always treated as false
	Value bool `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Valid bool `protobuf:"varint,2,opt,name=valid,proto3" json:"valid,omitempty"`
}

func (x *NullValue) Reset() {
	*x = NullValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NullValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NullValue) ProtoMessage() {}

func (x *NullValue) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NullValue.ProtoReflect.Descriptor instead.
func (*NullValue) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{9}
}

func (x *NullValue) GetValue() bool {
	if x != nil {
		return x.Value
	}
	return false
}

func (x *NullValue) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type ListValue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Repeated field of dynamically typed values.
	Values []*Value `protobuf:"bytes,1,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *ListValue) Reset() {
	*x = ListValue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListValue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListValue) ProtoMessage() {}

func (x *ListValue) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListValue.ProtoReflect.Descriptor instead.
func (*ListValue) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{10}
}

func (x *ListValue) GetValues() []*Value {
	if x != nil {
		return x.Values
	}
	return nil
}

type ExecRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sql        string   `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
	Parameters []*Value `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *ExecRequest) Reset() {
	*x = ExecRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecRequest) ProtoMessage() {}

func (x *ExecRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecRequest.ProtoReflect.Descriptor instead.
func (*ExecRequest) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{11}
}

func (x *ExecRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *ExecRequest) GetParameters() []*Value {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type ExecResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastInsertId int64 `protobuf:"varint,1,opt,name=last_insert_id,json=lastInsertId,proto3" json:"last_insert_id,omitempty"`
	RowsAffected int64 `protobuf:"varint,2,opt,name=rows_affected,json=rowsAffected,proto3" json:"rows_affected,omitempty"`
}

func (x *ExecResponse) Reset() {
	*x = ExecResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExecResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecResponse) ProtoMessage() {}

func (x *ExecResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecResponse.ProtoReflect.Descriptor instead.
func (*ExecResponse) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{12}
}

func (x *ExecResponse) GetLastInsertId() int64 {
	if x != nil {
		return x.LastInsertId
	}
	return 0
}

func (x *ExecResponse) GetRowsAffected() int64 {
	if x != nil {
		return x.RowsAffected
	}
	return 0
}

type QueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sql        string   `protobuf:"bytes,1,opt,name=sql,proto3" json:"sql,omitempty"`
	Parameters []*Value `protobuf:"bytes,2,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *QueryRequest) Reset() {
	*x = QueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryRequest) ProtoMessage() {}

func (x *QueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryRequest.ProtoReflect.Descriptor instead.
func (*QueryRequest) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{13}
}

func (x *QueryRequest) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *QueryRequest) GetParameters() []*Value {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type QueryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// column types
	Columns []*Column `protobuf:"bytes,1,rep,name=columns,proto3" json:"columns,omitempty"`
	// returned values
	Rows []*ListValue `protobuf:"bytes,2,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *QueryResponse) Reset() {
	*x = QueryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryResponse) ProtoMessage() {}

func (x *QueryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryResponse.ProtoReflect.Descriptor instead.
func (*QueryResponse) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{14}
}

func (x *QueryResponse) GetColumns() []*Column {
	if x != nil {
		return x.Columns
	}
	return nil
}

func (x *QueryResponse) GetRows() []*ListValue {
	if x != nil {
		return x.Rows
	}
	return nil
}

type Column struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type TypeCode `protobuf:"varint,1,opt,name=type,proto3,enum=sqlite.rpc.v0.TypeCode" json:"type,omitempty"`
	Name string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Column) Reset() {
	*x = Column{}
	if protoimpl.UnsafeEnabled {
		mi := &file_sqlite_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Column) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Column) ProtoMessage() {}

func (x *Column) ProtoReflect() protoreflect.Message {
	mi := &file_sqlite_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Column.ProtoReflect.Descriptor instead.
func (*Column) Descriptor() ([]byte, []int) {
	return file_sqlite_proto_rawDescGZIP(), []int{15}
}

func (x *Column) GetType() TypeCode {
	if x != nil {
		return x.Type
	}
	return TypeCode_TYPE_CODE_UNSPECIFIED
}

func (x *Column) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

var File_sqlite_proto protoreflect.FileDescriptor

var file_sqlite_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0d,
	0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x30, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x33,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x22, 0xfa, 0x03, 0x0a, 0x05, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x43, 0x0a,
	0x0d, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x30, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x00, 0x52, 0x09, 0x74, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x62, 0x6c, 0x6f, 0x62, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x30, 0x2e, 0x42, 0x6c, 0x6f, 0x62, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x09, 0x62,
	0x6c, 0x6f, 0x62, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x72, 0x65, 0x61, 0x6c,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73,
	0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x30, 0x2e, 0x52, 0x65, 0x61,
	0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x42, 0x0a, 0x0d, 0x6e, 0x75, 0x6d, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x73, 0x71, 0x6c,
	0x69, 0x74, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x30, 0x2e, 0x4e, 0x75, 0x6d, 0x65, 0x72,
	0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x6e, 0x75, 0x6d, 0x65, 0x72,
	0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x6c, 0x5f,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x71,
	0x6c, 0x69, 0x74, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x30, 0x2e, 0x42, 0x6f, 0x6f, 0x6c,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x09, 0x62, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x39, 0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65,
	0x48, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x39, 0x0a,
	0x0a, 0x6e, 0x75, 0x6c, 0x6c, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x30, 0x2e, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6e,
	0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x06, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64,
	0x22, 0x3b, 0x0a, 0x0d, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x67, 0x65, 0x72, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x37, 0x0a,
	0x09, 0x54, 0x65, 0x78, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x09, 0x42, 0x6c, 0x6f, 0x62, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22,
	0x37, 0x0a, 0x09, 0x52, 0x65, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x3a, 0x0a, 0x0c, 0x4e, 0x75, 0x6d, 0x65,
	0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x22, 0x37, 0x0a, 0x09, 0x42, 0x6f, 0x6f, 0x6c, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x53, 0x0a,
	0x09, 0x54, 0x69, 0x6d, 0x65, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x22, 0x37, 0x0a, 0x09, 0x4e, 0x75, 0x6c, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x09, 0x4c,
	0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74,
	0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x06,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x55, 0x0a, 0x0b, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x73, 0x71,
	0x6c, 0x69, 0x74, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x30, 0x2e, 0x56, 0x61, 0x6c, 0x75,
	0x65, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x59, 0x0a,
	0x0c, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x65, 0x72,
	0x74, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x6f, 0x77, 0x73, 0x5f, 0x61, 0x66, 0x66, 0x65,
	0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x72, 0x6f, 0x77, 0x73,
	0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x56, 0x0a, 0x0c, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x12, 0x34, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x30, 0x2e, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73,
	0x22, 0x6e, 0x0a, 0x0d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2f, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x76, 0x30, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x73, 0x12, 0x2c, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x30,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x77, 0x73,
	0x22, 0x49, 0x0a, 0x06, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x17, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74,
	0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x30, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x2a, 0xcb, 0x01, 0x0a, 0x08,
	0x54, 0x79, 0x70, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x19, 0x0a, 0x15, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45,
	0x44, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45,
	0x5f, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x45, 0x52, 0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x02, 0x12, 0x12,
	0x0a, 0x0e, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x4c, 0x4f, 0x42,
	0x10, 0x03, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x52, 0x45, 0x41, 0x4c, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x55, 0x4d, 0x45, 0x52, 0x49, 0x43, 0x10, 0x05, 0x12, 0x12, 0x0a,
	0x0e, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x42, 0x4f, 0x4f, 0x4c, 0x10,
	0x06, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x54,
	0x49, 0x4d, 0x45, 0x10, 0x07, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f,
	0x44, 0x45, 0x5f, 0x4e, 0x55, 0x4c, 0x4c, 0x10, 0x08, 0x32, 0x96, 0x01, 0x0a, 0x0f, 0x44, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a,
	0x04, 0x45, 0x78, 0x65, 0x63, 0x12, 0x1a, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x76, 0x30, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x1b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76,
	0x30, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42,
	0x0a, 0x05, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1b, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x76, 0x30, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x76, 0x30, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x1d, 0x5a, 0x1b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x62, 0x61, 0x6b, 0x69, 0x6e, 0x73, 0x2f, 0x73, 0x71, 0x6c, 0x69, 0x74, 0x65, 0x72, 0x70,
	0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_sqlite_proto_rawDescOnce sync.Once
	file_sqlite_proto_rawDescData = file_sqlite_proto_rawDesc
)

func file_sqlite_proto_rawDescGZIP() []byte {
	file_sqlite_proto_rawDescOnce.Do(func() {
		file_sqlite_proto_rawDescData = protoimpl.X.CompressGZIP(file_sqlite_proto_rawDescData)
	})
	return file_sqlite_proto_rawDescData
}

var file_sqlite_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_sqlite_proto_msgTypes = make([]protoimpl.MessageInfo, 16)
var file_sqlite_proto_goTypes = []interface{}{
	(TypeCode)(0),                 // 0: sqlite.rpc.v0.TypeCode
	(*Type)(nil),                  // 1: sqlite.rpc.v0.Type
	(*Value)(nil),                 // 2: sqlite.rpc.v0.Value
	(*IntergerValue)(nil),         // 3: sqlite.rpc.v0.IntergerValue
	(*TextValue)(nil),             // 4: sqlite.rpc.v0.TextValue
	(*BlobValue)(nil),             // 5: sqlite.rpc.v0.BlobValue
	(*RealValue)(nil),             // 6: sqlite.rpc.v0.RealValue
	(*NumericValue)(nil),          // 7: sqlite.rpc.v0.NumericValue
	(*BoolValue)(nil),             // 8: sqlite.rpc.v0.BoolValue
	(*TimeValue)(nil),             // 9: sqlite.rpc.v0.TimeValue
	(*NullValue)(nil),             // 10: sqlite.rpc.v0.NullValue
	(*ListValue)(nil),             // 11: sqlite.rpc.v0.ListValue
	(*ExecRequest)(nil),           // 12: sqlite.rpc.v0.ExecRequest
	(*ExecResponse)(nil),          // 13: sqlite.rpc.v0.ExecResponse
	(*QueryRequest)(nil),          // 14: sqlite.rpc.v0.QueryRequest
	(*QueryResponse)(nil),         // 15: sqlite.rpc.v0.QueryResponse
	(*Column)(nil),                // 16: sqlite.rpc.v0.Column
	(*timestamppb.Timestamp)(nil), // 17: google.protobuf.Timestamp
}
var file_sqlite_proto_depIdxs = []int32{
	0,  // 0: sqlite.rpc.v0.Type.code:type_name -> sqlite.rpc.v0.TypeCode
	3,  // 1: sqlite.rpc.v0.Value.integer_value:type_name -> sqlite.rpc.v0.IntergerValue
	4,  // 2: sqlite.rpc.v0.Value.text_value:type_name -> sqlite.rpc.v0.TextValue
	5,  // 3: sqlite.rpc.v0.Value.blob_value:type_name -> sqlite.rpc.v0.BlobValue
	6,  // 4: sqlite.rpc.v0.Value.real_value:type_name -> sqlite.rpc.v0.RealValue
	7,  // 5: sqlite.rpc.v0.Value.numeric_value:type_name -> sqlite.rpc.v0.NumericValue
	8,  // 6: sqlite.rpc.v0.Value.bool_value:type_name -> sqlite.rpc.v0.BoolValue
	9,  // 7: sqlite.rpc.v0.Value.time_value:type_name -> sqlite.rpc.v0.TimeValue
	10, // 8: sqlite.rpc.v0.Value.null_value:type_name -> sqlite.rpc.v0.NullValue
	17, // 9: sqlite.rpc.v0.TimeValue.value:type_name -> google.protobuf.Timestamp
	2,  // 10: sqlite.rpc.v0.ListValue.values:type_name -> sqlite.rpc.v0.Value
	2,  // 11: sqlite.rpc.v0.ExecRequest.parameters:type_name -> sqlite.rpc.v0.Value
	2,  // 12: sqlite.rpc.v0.QueryRequest.parameters:type_name -> sqlite.rpc.v0.Value
	16, // 13: sqlite.rpc.v0.QueryResponse.columns:type_name -> sqlite.rpc.v0.Column
	11, // 14: sqlite.rpc.v0.QueryResponse.rows:type_name -> sqlite.rpc.v0.ListValue
	0,  // 15: sqlite.rpc.v0.Column.type:type_name -> sqlite.rpc.v0.TypeCode
	12, // 16: sqlite.rpc.v0.DatabaseService.Exec:input_type -> sqlite.rpc.v0.ExecRequest
	14, // 17: sqlite.rpc.v0.DatabaseService.Query:input_type -> sqlite.rpc.v0.QueryRequest
	13, // 18: sqlite.rpc.v0.DatabaseService.Exec:output_type -> sqlite.rpc.v0.ExecResponse
	15, // 19: sqlite.rpc.v0.DatabaseService.Query:output_type -> sqlite.rpc.v0.QueryResponse
	18, // [18:20] is the sub-list for method output_type
	16, // [16:18] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_sqlite_proto_init() }
func file_sqlite_proto_init() {
	if File_sqlite_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_sqlite_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Type); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IntergerValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlobValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RealValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NumericValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BoolValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimeValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NullValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListValue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExecResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_sqlite_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Column); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_sqlite_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*Value_IntegerValue)(nil),
		(*Value_TextValue)(nil),
		(*Value_BlobValue)(nil),
		(*Value_RealValue)(nil),
		(*Value_NumericValue)(nil),
		(*Value_BoolValue)(nil),
		(*Value_TimeValue)(nil),
		(*Value_NullValue)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_sqlite_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   16,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_sqlite_proto_goTypes,
		DependencyIndexes: file_sqlite_proto_depIdxs,
		EnumInfos:         file_sqlite_proto_enumTypes,
		MessageInfos:      file_sqlite_proto_msgTypes,
	}.Build()
	File_sqlite_proto = out.File
	file_sqlite_proto_rawDesc = nil
	file_sqlite_proto_goTypes = nil
	file_sqlite_proto_depIdxs = nil
}
